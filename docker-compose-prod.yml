#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# -----------------------------------------------------------------------
# We don't support docker-compose for production environments.
# If you choose to use this type of deployment make sure to
# create you own docker environment file (docker/.env) with your own
# unique random secure passwords and SECRET_KEY.
# -----------------------------------------------------------------------
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - superset_home:/app/superset_home

x-superset-env: &superset-env
  - path: .env
    required: true

x-superset-image: &superset-image
  ${SUPERSET_IMAGE:-local/superset:prod}

  
x-superset-build: &superset-build
  context: .
  dockerfile: no-frontend.Dockerfile

services:
  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: *superset-env
    environment:
      # Force both local and host connections to use MD5, not SCRAM
      POSTGRES_INITDB_ARGS: "--auth-local=md5 --auth-host=md5"
    image: postgres:15
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  superset:
    env_file: *superset-env
    image: *superset-image
    build: *superset-build
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    restart: unless-stopped
    ports:
      - "${SUPERSET_PORT}:${SUPERSET_PORT}"
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    container_name: superset_init
    image: *superset-image
    command: ["/app/docker/docker-init.sh"]
    env_file: *superset-env
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-worker:
    env_file: *superset-env
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    restart: unless-stopped
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]

  superset-worker-beat:
    env_file: *superset-env
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    restart: unless-stopped
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    healthcheck:
      disable: true

  superset-backup:
    container_name: superset_backup
    image: tiredofit/db-backup:4.1.19
    depends_on:
      - db
    volumes:
      - ../backups/:/backup
    environment:
      - DB_TYPE=pgsql
      - DEFAULT_COMPRESSION=GZ
      - BACKUP_JOB_CONCURRENCY=1
      - DB_HOST=${DATABASE_HOST}
      - DBFA_HOST=${DATABASE_HOST}
      - DB_NAME=${DATABASE_DB}
      - DEFAULT_PORT=${DATABASE_PORT}
      - DB_USER=${DATABASE_USER}
      - DB_PASS=${DATABASE_PASSWORD}

      - DEFAULT_BACKUP_BEGIN=+60 # backup starts in 1 hour
      - DEFAULT_BACKUP_INTERVAL=${BACKUP_FREQUENCY:-1440} # backup 24 hours (minutes)
      - DEFAULT_CLEANUP_TIME=${CLEANUP_FREQUENCY:-4500} # clean backups that are older than 3 days
      - MANUAL_RUN_FOREVER=FALSE
      - CONTAINER_ENABLE_MONITORING=FALSE
      - DEFAULT_BACKUP_LOCTION=FILESYSTEM
      - DEFAULT_CHECKSUM=NONE
    restart: unless-stopped

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
